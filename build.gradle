plugins {
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'java'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'

}

group = 'com.shop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Thymeleaf Security
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    // ModelMapper
    implementation 'org.modelmapper:modelmapper:3.1.0'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Lombok
    compileOnly 'org.projectlombok:lombok'  // 최신 버전 확인
    annotationProcessor 'org.projectlombok:lombok'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api:2.1.1"

    implementation 'org.mariadb.jdbc:mariadb-java-client:3.3.3'

    runtimeOnly 'com.mysql:mysql-connector-j'

}

def generated = layout.buildDirectory.dir("generated/querydsl").get().asFile;

sourceSets {
    main {
        java {
            srcDirs += [generated]
        }
    }
}

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(generated)
    options.compilerArgs += ["-parameters"]
}

test {
    useJUnitPlatform()
}


